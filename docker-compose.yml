version: "3"

volumes:
  local_postgres_data: {}
  local_postgres_data_backups: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/dev/Dockerfile
    depends_on:
      - postgres
      - redis

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/local/bin/docker:/usr/local/bin/docker
      - /usr/bin/docker-compose:/usr/bin/docker-compose
      - .:/app

    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    expose:
      - 8000
    ports:
      - "8000:8000"
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/prod/postgres/Dockerfile
    volumes:
      - local_postgres_data:/var/lib/postgresql/data
      - local_postgres_data_backups:/backups
    env_file:
      - ./.envs/.local/.postgres

  redis:
    image: redis:6-alpine

  stripecli:
    image: stripe/stripe-cli:latest
    network_mode: host
    command: listen --api-key sk_test_51HCopMKRJ23zrNRsBClyDiNSIItLH6jxRjczuqwvtXRnTRTKIPAPMaukgGr3HA9PjvCPwC8ZJ5mjoR7mq18od40S00IgdsI8TG --events invoice.payment_succeeded  --forward-to http://localhost:8000/api/portals/stripe_webhooks_invoice_payment_succeeded/

  celeryworker:
    <<: *django
    image: talendy_local_celeryworker
    depends_on:
      - redis
      - postgres
    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: talendy_local_celerybeat
    depends_on:
      - redis
      - postgres
    ports: []
    command: /start-celerybeat

  flower:
    <<: *django
    image: talendy_local_flower
    ports:
      - "5555:5555"
    command: /start-flower

  collaborationrooms:
    build:
      context: .
      dockerfile: ./compose/dev/collaboration-rooms/Dockerfile

    ports:
      - "5500:5500"
    command: yarn start

  chats:
    build:
      context: .
      dockerfile: ./compose/dev/chats/Dockerfile

    ports:
      - "5400:5400"
    command: yarn start
